name: build and deploy
on:
  workflow_dispatch: {}
  push:
    branches:
    - stormblood
    - shadowbringers
    - endwalker
    - dawntrail
    - ui

jobs:
  checks:
    if: github.repository_owner == 'xivanalysis'
    uses: ./.github/workflows/checks.yml

  build:
    runs-on: ubuntu-latest
    needs: [checks]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/prepare-workspace
    # Build
    - name: build
      run: |
        pnpm run extract
        export REACT_APP_VERSION=$GITHUB_RUN_NUMBER
        export REACT_APP_GIT_COMMIT=$(git rev-parse --short HEAD)
        export REACT_APP_GIT_BRANCH=$GITHUB_REF_NAME
        CI=false NODE_ENV=production pnpm run build
    - uses: actions/upload-artifact@v4
      with:
        name: dist-client
        path: build
        retention-days: 7

  # This is seperated out such that it can be re-run seperately to the rest of the build.
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    # Ensure that only one build can deploy at a time.
    concurrency: production
    environment: aposimz
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist-client
        path: build
    - name: set environment
      run: |
        BUILD_ID="${{ github.ref_name }}.${{ github.sha }}"
        echo "BUILD_ID=${BUILD_ID/\//_}" >> "$GITHUB_ENV"
        if [ ${{ github.event_name}} == "push" ]; then
          echo "COMPARE=${{ github.event.before }}...${{ github.event.after }}" >> "$GITHUB_ENV"
        else
          echo "COMPARE=${{ github.sha }}^...${{ github.sha }}" >> "$GITHUB_ENV"
        fi
    - name: prepare payload
      run: |
        mv build $BUILD_ID
        tar -czf $BUILD_ID.tgz $BUILD_ID
    - name: connect to tailnet
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:xivanalysis
    - name: upload
      run: scp -q -4 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $BUILD_ID.tgz ${{ secrets.DEPLOY_SSH_REMOTE }}:${{ secrets.DEPLOY_CLIENT_PATH }}/deploy-cache
    - name: deploy
      run: ssh -q -4 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.DEPLOY_SSH_REMOTE }} "cd ${{ secrets.DEPLOY_CLIENT_PATH }} && ./deploy.sh ${GITHUB_REF_NAME/\//_} ${{ github.sha }}"
    # Yeah we really are checking out the repo to pull in the webhook script.
    # At least it's only checked out after we've finished the deploy.
    - uses: actions/checkout@v4
    - name: success webhook
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: bash ./.github/scripts/deploy-webhook.sh Passed 4303448
    - name: failure webhook
      if: failure()
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: bash ./.github/scripts/deploy-webhook.sh Failed 13700128
